[
  {
    "id": "kb-1",
    "title": "Python Data Structures Tutorial",
    "url": "https://docs.python.org/3/tutorial/datastructures.html",
    "snippet": "This chapter describes some things you've learned about already in more detail, and adds some new things as well. Lists, tuples, sets, and dictionaries are fundamental data structures in Python.",
    "courseId": "cs101"
  },
  {
    "id": "kb-2",
    "title": "Week 3: Search Algorithms",
    "url": "https://course-materials.example.com/week3/binary-search.pdf",
    "snippet": "Binary search is a fundamental algorithm that efficiently finds elements in sorted arrays. Time complexity: O(log n). Implementation requires understanding of divide-and-conquer strategies.",
    "courseId": "cs101"
  },
  {
    "id": "kb-3",
    "title": "Python Errors and Exceptions Tutorial",
    "url": "https://docs.python.org/3/tutorial/errors.html",
    "snippet": "Until now error messages haven't been more than mentioned, but if you have tried out the examples you have probably seen some. There are (at least) two distinguishable kinds of errors: syntax errors and exceptions.",
    "courseId": "cs101"
  },
  {
    "id": "kb-4",
    "title": "Week 6: Advanced Python Concepts",
    "url": "https://course-materials.example.com/week6/decorators.pdf",
    "snippet": "Decorators provide a simple syntax for calling higher-order functions. A decorator is a function that takes another function and extends the behavior of the latter function without explicitly modifying it.",
    "courseId": "cs101"
  },
  {
    "id": "kb-5",
    "title": "Python bisect module documentation",
    "url": "https://docs.python.org/3/library/bisect.html",
    "snippet": "This module provides support for maintaining a list in sorted order without having to sort the list after each insertion. For long lists of items with expensive comparison operations, this can be an improvement over the more common approach.",
    "courseId": "cs101"
  }
]
